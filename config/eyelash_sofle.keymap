#define ZMK_POINTING_DEFAULT_MOVE_VAL 300  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 3 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <50>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <0>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <50>;      // 100
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1            &kp N2        &kp N3     &kp N4     &kp N5    &kp UP_ARROW     &kp N6   &kp N7     &kp N8     &kp N9         &kp N0      &kp GRAVE
&mo 3       &kp Q             &kp W         &kp E      &kp R      &kp T     &kp DOWN_ARROW   &kp Y    &kp U      &kp I      &kp O          &kp P       &kp BACKSPACE
&mo 1       &kp A             &kp S         &kp D      &kp F      &kp G     &kp LEFT_ARROW   &kp H    &kp J      &kp K      &kp L          &kp SEMI    &kp ENTER
&kp LSHFT   &kp Z             &kp X         &kp C      &kp V      &kp B     &kp RIGHT_ARROW  &kp N    &kp M      &kp COMMA  &kp DOT        &kp FSLH    &kp RIGHT_SHIFT
&kp C_MUTE  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LCTRL  &kp SPACE  &mo 2     &mkp LCLK        &kp SQT  &kp LANG1  &kp RCTRL  &kp RIGHT_ALT  &kp C_MENU
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "LAYER0";
        };

        layer_1_Arrow {
            bindings = <
&kp TILDE       &kp F1          &kp F2          &kp F3           &kp F4           &kp F5          &mmv MOVE_UP     &kp F6     &kp F7      &kp F8     &kp F9            &kp F10            &kp NON_US_BACKSLASH
&none           &kp TAB         &kp UP_ARROW    &kp CAPSLOCK     &kp PRINTSCREEN  &kp KP_ENTER    &mmv MOVE_DOWN   &none      &none       &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
&trans          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE    &kp DELETE      &mmv MOVE_LEFT   &none      &kp INSERT  &kp HOME   &kp PAGE_UP       &none              &none
&kp LEFT_SHIFT  &none           &none           &kp H            &kp Y            &kp N           &mmv MOVE_RIGHT  &none      &none       &kp END    &kp PG_DN         &none              &kp RIGHT_SHIFT
&kp C_MUTE      &kp LEFT_WIN    &kp LEFT_ALT    &kp LCTRL        &kp SPACE        &none           &mkp LCLK        &kp ENTER  &kp SPACE   &kp RCTRL  &kp RIGHT_ALT     &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "layer1";
        };

        layer_2_Func {
            bindings = <
&none  &kp F1                          &kp F2           &kp F3          &kp F4        &kp F5          &kp UP_ARROW     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10                            &none
&none  &kp F6                          &kp F7           &kp F8          &kp F9        &kp F10         &kp DOWN_ARROW   &none            &none            &kp F11          &kp F12          &none                              &none
&none  &kp F11                         &kp F12          &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1    &kp LEFT_ARROW   &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI                    &rgb_ug RGB_SPD
&none  &bl BL_TOG                      &rgb_ug RGB_EFF  &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT      &kp RIGHT_ARROW  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_COLOR_HSB(102,100,40)  &rgb_ug RGB_COLOR_HSB(201,69,46)
&none  &rgb_ug RGB_COLOR_HSB(0,0,100)  &out OUT_USB     &out OUT_USB    &none         &none           &mkp LCLK        &none            &none            &none            &none            &none
            >;
        };

        layer_3_NUM {
            bindings = <
&kp TILDE  &kp N1        &kp N2        &kp N3     &kp N4        &kp N5       &kp UP_ARROW     &kp KP_NUMLOCK  &kp SLASH        &kp ASTERISK  &kp MINUS     &none    &none
&none      &kp N6        &kp N7        &kp N8     &kp N9        &kp N0       &kp DOWN_ARROW   &kp N7          &kp N8           &kp N9        &kp PLUS      &none    &none
&none      &none         &none         &kp MINUS  &kp PLUS      &kp EQUAL    &kp LEFT_ARROW   &kp N4          &kp N5           &kp N6        &kp EQUAL     &none    &none
&none      &none         &none         &kp SLASH  &kp ASTERISK  &kp ENTER    &kp RIGHT_ARROW  &kp N1          &kp N2           &kp N3        &kp KP_ENTER  &none    &none
&none      &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT     &kp SPACE    &mkp LCLK        &kp COMMA       &kp KP_NUMBER_0  &kp RCTRL     &kp RALT      &kp DOT
            >;
        };
    };
};
